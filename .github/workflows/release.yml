name: CI Release

on:
  release:
    types: [published]

env:
  PROJECT_FILE: FunWithGithubActions/FunWithGithubActions.csproj
  PROEJCT_PREFIX: "Fun With GitHub Actions"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      RELEASE_NAME: "${{ env.PROEJCT_PREFIX }}-${{ github.event.release.tag_name }}-${{ matrix.target }}"
    strategy:
      matrix:
        kind: ['linux', 'windows']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Build
      run: dotnet publish "${{ env.PROJECT_FILE }}" -c Release -r "${{ matrix.target }}"  -f netcoreapp3.1 -o ${{ env.RELEASE_NAME }} /p:Version=${{ github.event.release.tag_name }}
    - name: Package
      shell: bash
      run: |
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${{env.RELEASE_NAME}}.zip" "./${{env.RELEASE_NAME}}/*"
          else
            tar czvf "${{env.RELEASE_NAME}}.tar.gz" "${{env.RELEASE_NAME}}"
          fi
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.RELEASE_NAME}}
        path: ${{env.RELEASE_NAME}}.*
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "${{env.RELEASE_NAME}}.*"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
