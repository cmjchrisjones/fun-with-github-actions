name: CI Release

on:
  release:
    types: [published]

env:
  PROJECT_FILE: FunWithGithubActions/FunWithGithubActions.csproj
  PROEJCT_PREFIX: "Fun With GitHub Actions"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      RELEASE_NAME: "Fun With GitHub Actions-${{ github.event.release.tag_name }}-${{ matrix.target }}"
    strategy:
      matrix:
        kind: ['linux', 'windows']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Build
      run: dotnet publish "FunWithGithubActions/FunWithGithubActions.csproj" -c Release -r "${{ matrix.target }}"  -f netcoreapp3.1 -o "Fun With GitHub Actions" /p:Version=${{ github.event.release.tag_name }}
    - name: Package
      shell: bash
      run: |
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "Fun With GitHub Actions.zip" "./Fun With GitHub Actions/*"
          else
            tar czvf "Fun With GitHub Actions.tar.gz" "Fun With GitHub Actions"
          fi
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Fun With GitHub Actions
        path: "Fun With GitHub Actions.*"
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "Fun With GitHub Actions.*"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
