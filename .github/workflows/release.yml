name: CI Release

on:
  release:
    types: [published]

env:
  PROJECT_FILE: FunWithGithubActions/FunWithGithubActions.csproj
  PROEJCT_PREFIX: "Fun With GitHub Actions"
  DOTNET_SDK_VERSION: "3.1.x"
  FRAMEWORK: netcoreapp3.1
  CONFIGURATION: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        kind: ['linux', 'windows']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

    - name: Verify .NET Core
      run: dotnet --info
    
    - name: Build
      run: dotnet publish "${{ env.PROJECT_FILE }}" -c ${{ env.CONFIGURATION }} -r "${{ matrix.target }}"  -f ${{ env.FRAMEWORK }} -o "${{ env.PROEJCT_PREFIX }}" /p:Version=${{ github.event.release.tag_name }}
    
    - name: Package
      shell: bash
      run: |
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${{ env.PROEJCT_PREFIX }}-win-x64.zip" "./${{ env.PROEJCT_PREFIX }}/*"
          else
            tar czvf "${{ env.PROEJCT_PREFIX }}-linux-x64.tar.gz" "${{ env.PROEJCT_PREFIX }}"
          fi
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROEJCT_PREFIX }}-${{ matrix.target }}
        path: "${{ env.PROEJCT_PREFIX }}-*.*"
    
    - name: Changelog
      uses: glennawatson/ChangeLog@v1
      id: changelog
    
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "${{ env.PROEJCT_PREFIX }}-*.*"
        body: ${{ steps.changelog.outputs.commitLog }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #provided by GitHub Actions
